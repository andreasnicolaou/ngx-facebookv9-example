//# sourceMappingURL=data:application/json;base64,{"version":3,"file":"ui-params.js","sourceRoot":"ng://ngx-facebook/","sources":["lib/models/ui-params.ts"],"names":[],"mappings":"","sourcesContent":["/**\r\n * Params that can be passed when creating a Share dialog.\r\n */\r\nexport interface ShareDialogParams {\r\n    /**\r\n     * The link attached to this post. Required when using method share. Include open graph meta tags in the page at this URL to customize the story that is shared.\r\n     * Defaults to Current URL\r\n     */\r\n    href?: string;\r\n\r\n    /**\r\n     * A hashtag specified by the developer to be added to the shared content. People will still have the opportunity to remove this hashtag in the dialog. The hashtag should include the hash symbol, e.g. #facebook.\r\n     */\r\n    hashtag?: string;\r\n\r\n    /**\r\n     * A quote to be shared along with the link, either highlighted by the user or predefined by the developer, as in a pull quote on an article.\r\n     */\r\n    quote?: string;\r\n\r\n    /**\r\n     * If set to true the share button will open the share dialog in an iframe on top of your website (For more information see Mobile Web Share Dialog. This option is only available for mobile, not desktop.\r\n     */\r\n    mobile_iframe?: string;\r\n\r\n    /**\r\n     * A string specifying which Open Graph action type to publish, e.g., og.likes for the built in like type. The dialog also supports approved custom types. Required when using method share_open_graph.\r\n     */\r\n    action_type?: string;\r\n\r\n    /**\r\n     * A JSON object of key/value pairs specifying parameters which correspond to the action_type being used. Valid key/value pairs are the same parameters that can be used when publishing Open Graph Actions using the API. Required when using method share_open_graph.\r\n     */\r\n    action_properties?: string;\r\n}\r\n\r\n/**\r\n * Params that can be passed when creating a Feed dialog.\r\n */\r\nexport interface FeedDialogParams {\r\n    /**\r\n     * The ID of the person posting the message. If this is unspecified, it defaults to the current person. If specified, it must be the ID of the person or of a page that the person administers.\r\n     */\r\n    from?: string;\r\n\r\n    /**\r\n     * The ID of the profile that this story will be published to. If this is unspecified, it defaults to the value of from. The ID must be a friend who also uses your app.\r\n     */\r\n    to?: string;\r\n\r\n    /**\r\n     * The link attached to this post. With the Feed Dialog, people can also share plain text status updates with no content from your app; just leave the link parameter empty.\r\n     */\r\n    link?: string;\r\n\r\n    /**\r\n     * The URL of a picture attached to this post. The picture must be at least 200px by 200px. See our documentation on sharing best practices for more information on sizes\r\n     */\r\n    picture?: string;\r\n\r\n    /**\r\n     * The URL of a media file (either SWF or MP3) attached to this post. If SWF, you must also specify picture to provide a thumbnail for the video.\r\n     */\r\n    source?: string;\r\n\r\n    /**\r\n     * The name of the link attachment.\r\n     */\r\n    name?: string;\r\n\r\n    /**\r\n     * The caption of the link (appears beneath the link name). If not specified, this field is automatically populated with the URL of the link.\r\n     */\r\n    caption?: string;\r\n\r\n    /**\r\n     * The description of the link (appears beneath the link caption). If not specified, this field is automatically populated by information scraped from the link, typically the title of the page.\r\n     */\r\n    description?: string;\r\n\r\n    /**\r\n     * This argument is a comma-separated list, consisting of at most 5 distinct items, each of length at least 1 and at most 15 characters drawn from the set '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz_'. Each category is used in Facebook Insights to help you measure the performance of different types of post\r\n     */\r\n    ref?: string;\r\n}\r\n\r\n/**\r\n * Params that can be passed when creating a send dialog\r\n */\r\nexport interface SendDialogParams {\r\n\r\n    /**\r\n     * A user ID of a recipient. Once the dialog comes up, the sender can specify additional people as recipients.\r\n     */\r\n    to?: string;\r\n\r\n    /**\r\n     * Required parameter. The URL that is being sent in the message.\r\n     */\r\n    link?: string;\r\n}\r\n\r\n/**\r\n * The object passed to the [ui](../facebook-service/#ui) method. The properties below can be passed to all three types of dialogs. Each type of dialog accepts additional parameters that are documented above.\r\n */\r\nexport interface UIParams extends ShareDialogParams, FeedDialogParams, SendDialogParams {\r\n\r\n    /**\r\n     * The UI dialog that is being invoked. This is a required field.\r\n     */\r\n    method: any;\r\n\r\n    /**\r\n     * The UI dialog message.\r\n     */\r\n    message?: string;\r\n\r\n    /**\r\n     * Your app's unique identifier. Required.\r\n     */\r\n    app_id?: string;\r\n\r\n    /**\r\n     * The URL to redirect to after a person clicks a button on the dialog. Required when using URL redirection.\r\n     */\r\n    redirect_uri?: string;\r\n\r\n    /**\r\n     * Determines how the dialog is rendered.\r\n     * - If you are using the URL redirect dialog implementation, then this will be a full page display, shown within Facebook.com. This display type is called page\r\n     * - If you are using one of our iOS or Android SDKs to invoke the dialog, this is automatically specified and chooses an appropriate display type for the device.\r\n     * - If you are using the Facebook SDK for JavaScript, this will default to a modal iframe type for people logged into your app or async when using within a game on Facebook.com, and a popup window for everyone else. You can also force the popup type when when you use the Facebook SDK for JavaScript, if necessary.\r\n     * - Mobile web apps will always default to the touch display type.\r\n     */\r\n    display?: string;\r\n\r\n    /**\r\n     * - Dialog in create phase allows you to get stream url to upload video; Dialog in publish phase will provide preview and go live button. required\r\n     * - phase = create | publish\r\n     */\r\n    phase?: string;\r\n\r\n    /**\r\n     * - This parameter is required for publish phase.\r\n     * - The response object returned from either API or create phase.\r\n     */\r\n    broadcast_data?: any;\r\n\r\n}\r\n"]}